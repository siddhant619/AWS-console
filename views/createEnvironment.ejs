<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Environment</title>
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"
      integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm"
      crossorigin="anonymous"
    />

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css"
    />
    <link rel="stylesheet" href="styles/sidebar.css" />
  </head>
  <body>
    <%- include('./partials/sidebar.ejs', {active:'createEnvironment'}) %>
    <div class="container w-50 form-container">
      <h1 class="text-center">Create New Environment</h1>

      <form id="environmentForm" style="margin-top: 20px">
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="stackName">Stack Name</label>
            <input
              type="text"
              class="form-control"
              id="stackName"
              placeholder="Cloudformation stack name"
              value="setupEnv"
              required
            />
          </div>
          <div class="form-group col-md-6">
            <label for="vpcName">VPC Name</label>
            <input
              type="text"
              class="form-control"
              id="vpcName"
              placeholder="VPC name"
              value="demovpc"
              required
            />
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-8">
            <label for="vpcCIDR">VPC CIDR block</label>
            <input
              type="text"
              class="form-control"
              id="vpcCIDR"
              placeholder="10.0.0.0/16"
              value="10.0.0.0/16"
              required
            />
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="publicSubnetCIDR">Public subnet CIDR</label>
            <input
              type="text"
              class="form-control"
              id="publicSubnetCIDR"
              placeholder="10.0.0.0/24"
              value="10.0.0.0/24"
              required
            />
          </div>
          <div class="form-group col-md-6">
            <label for="privateSubnetCIDR">Private subnet CIDR</label>
            <input
              type="text"
              class="form-control"
              id="privateSubnetCIDR"
              placeholder="10.0.0.0/24"
              value="10.0.1.0/24"
              required
            />
          </div>
        </div>
        <button type="submit" class="btn btn-primary" id="env-button">
          Create Environment
        </button>
        <div id="error-message"></div>
      </form>
    </div>

    <!-- Bootstrap CDN -->
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>
    <!-- bootstrap-select CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
      const url = window.location.href;

      const lastSegment = url.split("/").pop();
      if (lastSegment === "createEnvironment")
        document.getElementById("env-link").classList.add("nav-link-active");

      const form = document.querySelector("#environmentForm");
      const message = document.getElementById("error-message");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const button = document.querySelector("#env-button");
        button.classList.add("disabled");
        button.innerHTML =
          '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...';
        const stackName = document.querySelector("#stackName").value;
        const vpcName = document.querySelector("#vpcName").value;
        const vpcCIDR = document.querySelector("#vpcCIDR").value;
        const publicSubnetCIDR =
          document.querySelector("#publicSubnetCIDR").value;
        const privateSubnetCIDR =
          document.querySelector("#privateSubnetCIDR").value;
        try {
          const response = await axios.post("/createEnvironment", {
            stackName,
            vpcName,
            vpcCIDR,
            publicSubnetCIDR,
            privateSubnetCIDR,
          });
          console.log("response is! ", response);
          if (response.data.errorMessage) {
            console.log("in error", response.data.errorMessage);
            message.innerHTML = `<p class="text-danger">
              response.errorMessage + " " + response.errorType</p>`;
          } else {
            message.innerHTML = `<p class="text-success">Creating stack with ID- ${response.data.stackId}</p>`;
          }
        } catch (e) {
          console.log("Some error!", e);
          message.innerHTML = `<p class="text-danger">Error ${
            e.response.data.errorMessage || ""
          }</p>`;
        }
        button.classList.remove("disabled");
        button.innerHTML = "Create Environment";
      });
    </script>
  </body>
</html>
