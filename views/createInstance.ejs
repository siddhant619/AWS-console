<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="styles/style.css" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css"
    />
  </head>
  <body>
    <div class="container w-50">
      <h1>Create New EC2 Instance</h1>

      <form id="instanceForm">
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="instanceName">Instance Name</label>
            <input
              type="text"
              class="form-control"
              id="instanceName"
              placeholder="DemoEC2"
              required
            />
          </div>
          <div class="form-group col-md-6">
            <label for="keyName">KeyName</label>
            <select class="selectpicker form-control" id="keyName" required>
              <% if(keyNames.data.length>0) { %> <%
              keyNames.data.forEach(item=>{ %>
              <option><%= item %></option>
              <% }) } %>
            </select>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-12">
            <label for="subnet">Subnet</label>
            <select class="selectpicker form-control" id="subnet" required>
              <% if(subnets.data.length>0) { %> <% subnets.data.forEach(item=>{
              %>
              <option value="<%=item.id %>">
                <%= item.id %> | <%=item.az %> | <%=item.vpcId %>
              </option>
              <% }) } %>
            </select>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-12">
            <label for="securityGroups">Security Group</label>
            <select
              class="selectpicker form-control"
              id="securityGroups"
              multiple
              required
            >
              <% if(securityGroups.data.length>0) { %> <%
              securityGroups.data.forEach(item=>{ %>
              <option value="<%=item.id %>">
                <%= item.id %> | <%=item.description %> %>
              </option>
              <% }) } %>
            </select>
          </div>
        </div>
        <button type="submit" class="btn btn-primary">Create Instance</button>
        <div id="error-message"></div>
      </form>
    </div>

    <!-- Bootstrap CDN -->
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>
    <!-- bootstrap-select CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
      const form = document.querySelector("#instanceForm");
      const message = document.getElementById("error-message");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const instanceName = document.querySelector("#instanceName").value;
        const keyName = document.querySelector("#keyName").value;
        const subnet = document.querySelector("#subnet").value;
        const securityGroupsOptions =
          document.querySelector("#securityGroups")?.options;
        const selectedSecurityGroups = [];
        Array.from(securityGroupsOptions).forEach((option) => {
          if (option.selected) {
            selectedSecurityGroups.push(option.value);
          }
        });

        try {
          const response = await axios.post("/createInstance", {
            instanceName,
            keyName,
            subnet,
            selectedSecurityGroups,
          });
          console.log("response is! ", response);
          if (response.data.errorMessage) {
            console.log("in error", response.data.errorMessage);
            message.innerHTML = `<p class="text-danger">
              response.errorMessage + " " + response.errorType</p>`;
          } else {
            message.innerHTML = `<p class="text-success">Instance created with ID- ${response.data.instanceId}</p>`;
            instanceName.value = "";
          }
        } catch (e) {
          console.log("Some error!", e);
          message.innerHTML = `<p class="text-danger">Some error occured!</p>`;
        }
        console.log(instanceName, keyName, subnet, selectedSecurityGroups);
      });
    </script>
  </body>
</html>
